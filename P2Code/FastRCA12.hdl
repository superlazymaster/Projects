// Seshadithya Saravanan 533007949

/**
 * Optimizes the carry propagation delay along RCA4 boundaries
 * using duplication and parallel assembly of logic 
 * The chip performs out=a+b
 * Both inputs a and b are in UNSIGNED format
 * carry output reflects the overflow 
 */


CHIP FastRCA12 {
    IN a[12], b[12];
    OUT out[12], carry;
	
    PARTS:
    // Put your code here:

    // RCA4(a=a[0..3], b=b[0..3], c=false, sum=out[0..3], cout=c1);
    // RCA4(a=a[4..7], b=b[4..7], c=c1, sum=out[4..7], cout=c2);
    // RCA4(a=a[8..11], b=b[8..11], c=c2, sum=out[8..11], cout=carry);

    // Add the first four bits and store the carry in mux1
    RCA4(a=a[0..3], b=b[0..3], c=false, sum=out[0..3], cout=mux1);

    // Add the second four bits with and without carry. Store the carry outs for both in separate variables
    RCA4(a=a[4..7], b=b[4..7], c=false, sum=firstSet, cout=mux11);
    RCA4(a=a[4..7], b=b[4..7], c=true, sum=firstSetWithCarry, cout=mux12);

    // Select which second four bits you want to output depending upon mux 1
    Mux16(a[0..3]=firstSet, a[4..15]=false, b[0..3]=firstSetWithCarry, b[4..15]=false, sel=mux1, out[0..3]=out[4..7]);
    // Select the carry out depending upon mux 1
    Mux(a=mux11, b=mux12, sel=mux1, out=carry1);

    // Add the last four bits with and without carry out
    RCA4(a=a[8..11], b=b[8..11], c=false, sum=secondSet, cout=mux21);
    RCA4(a=a[8..11], b=b[8..11], c=true, sum=secondSetWithCarry, cout=mux22);

    // Select which last four bits you want to output depending upon carry 1
    Mux16(a[0..3]=secondSet, a[4..15]=false, b[0..3]=secondSetWithCarry, b[4..15]=false, sel=carry1, out[0..3]=out[8..11]);
    // Select the final carry depending upon carry 1
    Mux(a=mux21, b=mux22, sel=carry1, out=carry);
}